// config files
// THIS FILE IS AUTOMATICALLY GENERATED BY param.py
// ANY CHANGES WILL BE OVERWRITTEN AT COMPILE TIME


  // common section

  if(elem_common) {
    Config::FillStringWithElement(elem_common, "bathymetry_path", bathymetry_path);
    Config::FillStringWithElement(elem_common, "BathymetrySuffix", BathymetrySuffix);
    Config::FillBoolWithElement(elem_common, "verbose", verbose);
    Config::FillStringWithElement(elem_common, "output_path", output_path);
    Config::FillBoolWithElement(elem_common, "paraview_panorama_vts_flag", paraview_panorama_vts_flag);
    Config::FillBoolWithElement(elem_common, "debug", debug);
    Config::FillStringWithElement(elem_common, "velocity_w_file", velocity_w_file);
    Config::FillStringWithElement(elem_common, "velocity_v_file", velocity_v_file);
    Config::FillStringWithElement(elem_common, "temperature_file", temperature_file);
    Config::FillStringWithElement(elem_common, "precipitation_file", precipitation_file);
    Config::FillStringWithElement(elem_common, "salinity_file", salinity_file);
    Config::FillStringWithElement(elem_common, "temperature_curve_file", temperature_curve_file);
    Config::FillStringWithElement(elem_common, "pole_temperature_file", pole_temperature_file);
    Config::FillStringWithElement(elem_common, "reconstruction_script_path", reconstruction_script_path);
    Config::FillBoolWithElement(elem_common, "use_earthbyte_reconstruction", use_earthbyte_reconstruction);
    Config::FillBoolWithElement(elem_common, "use_NASA_velocity", use_NASA_velocity);
    Config::FillIntWithElement(elem_common, "sun", sun);
    Config::FillIntWithElement(elem_common, "NASATemperature", NASATemperature);
    Config::FillDoubleWithElement(elem_common, "t_paleo_max", t_paleo_max);
    Config::FillDoubleWithElement(elem_common, "t_paleo", t_paleo);
    Config::FillIntWithElement(elem_common, "time_start", time_start);
    Config::FillIntWithElement(elem_common, "time_end", time_end);
    Config::FillIntWithElement(elem_common, "time_step", time_step);
    Config::FillDoubleWithElement(elem_common, "omega", omega);
  }

  // hydrosphere section

  if(elem_hydrosphere) {
    Config::FillStringWithElement(elem_hydrosphere, "input_path", input_path);
    Config::FillIntWithElement(elem_hydrosphere, "velocity_iter_max_2D", velocity_iter_max_2D);
    Config::FillIntWithElement(elem_hydrosphere, "pressure_iter_max_2D", pressure_iter_max_2D);
    Config::FillIntWithElement(elem_hydrosphere, "velocity_iter_max", velocity_iter_max);
    Config::FillIntWithElement(elem_hydrosphere, "pressure_iter_max", pressure_iter_max);
    Config::FillIntWithElement(elem_hydrosphere, "checkpoint", checkpoint);
    Config::FillDoubleWithElement(elem_hydrosphere, "buoyancy", buoyancy);
    Config::FillDoubleWithElement(elem_hydrosphere, "L_hyd", L_hyd);
    Config::FillDoubleWithElement(elem_hydrosphere, "re", re);
    Config::FillDoubleWithElement(elem_hydrosphere, "sc", sc);
    Config::FillDoubleWithElement(elem_hydrosphere, "pr", pr);
    Config::FillDoubleWithElement(elem_hydrosphere, "g", g);
    Config::FillDoubleWithElement(elem_hydrosphere, "cp_w", cp_w);
    Config::FillDoubleWithElement(elem_hydrosphere, "p_0", p_0);
    Config::FillDoubleWithElement(elem_hydrosphere, "t_0", t_0);
    Config::FillDoubleWithElement(elem_hydrosphere, "c_0", c_0);
    Config::FillDoubleWithElement(elem_hydrosphere, "u_0", u_0);
    Config::FillDoubleWithElement(elem_hydrosphere, "r_0_water", r_0_water);
    Config::FillDoubleWithElement(elem_hydrosphere, "r_air", r_air);
    Config::FillDoubleWithElement(elem_hydrosphere, "t_land", t_land);
    Config::FillDoubleWithElement(elem_hydrosphere, "t_average", t_average);
    Config::FillDoubleWithElement(elem_hydrosphere, "t_equator", t_equator);
    Config::FillDoubleWithElement(elem_hydrosphere, "t_pole", t_pole);
  }
